{"ast":null,"code":"import findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { isChromeDebugger } from \"./PlatformChecker\";\nexport function getTag(view) {\n  return findNodeHandle(view);\n}\nexport function measure(animatedRef) {\n  'worklet';\n\n  if (!_WORKLET && !isChromeDebugger()) {\n    throw new Error('(measure) method cannot be used on RN side!');\n  }\n\n  var viewTag = animatedRef();\n\n  var result = _measure(viewTag);\n\n  if (result.x === -1234567) {\n    throw new Error(\"The view with tag \" + viewTag + \" could not be measured\");\n  }\n\n  return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n  'worklet';\n\n  if (!_WORKLET && !isChromeDebugger()) {\n    return;\n  }\n\n  var viewTag = animatedRef();\n\n  _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n  'worklet';\n\n  if (!_WORKLET && !isChromeDebugger()) {\n    console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n  }\n\n  _setGestureState(handlerTag, newState);\n}","map":{"version":3,"names":["isChromeDebugger","getTag","view","findNodeHandle","measure","animatedRef","_WORKLET","Error","viewTag","result","_measure","x","scrollTo","y","animated","_scrollTo","setGestureState","handlerTag","newState","console","warn","_setGestureState"],"sources":["C:/Users/Jervinceee/Documents/GitHub/lalabaApp/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport { isChromeDebugger } from './PlatformChecker';\nexport function getTag(view) {\n    return findNodeHandle(view);\n}\nexport function measure(animatedRef) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        throw new Error('(measure) method cannot be used on RN side!');\n    }\n    const viewTag = animatedRef();\n    const result = _measure(viewTag);\n    if (result.x === -1234567) {\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\n    }\n    return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        return;\n    }\n    const viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n    }\n    _setGestureState(handlerTag, newState);\n}\n"],"mappings":";AACA,SAASA,gBAAT;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACzB,OAAOC,cAAc,CAACD,IAAD,CAArB;AACH;AACD,OAAO,SAASE,OAAT,CAAiBC,WAAjB,EAA8B;EACjC;;EACA,IAAI,CAACC,QAAD,IAAa,CAACN,gBAAgB,EAAlC,EAAsC;IAClC,MAAM,IAAIO,KAAJ,CAAU,6CAAV,CAAN;EACH;;EACD,IAAMC,OAAO,GAAGH,WAAW,EAA3B;;EACA,IAAMI,MAAM,GAAGC,QAAQ,CAACF,OAAD,CAAvB;;EACA,IAAIC,MAAM,CAACE,CAAP,KAAa,CAAC,OAAlB,EAA2B;IACvB,MAAM,IAAIJ,KAAJ,wBAA+BC,OAA/B,4BAAN;EACH;;EACD,OAAOC,MAAP;AACH;AACD,OAAO,SAASG,QAAT,CAAkBP,WAAlB,EAA+BM,CAA/B,EAAkCE,CAAlC,EAAqCC,QAArC,EAA+C;EAClD;;EACA,IAAI,CAACR,QAAD,IAAa,CAACN,gBAAgB,EAAlC,EAAsC;IAClC;EACH;;EACD,IAAMQ,OAAO,GAAGH,WAAW,EAA3B;;EACAU,SAAS,CAACP,OAAD,EAAUG,CAAV,EAAaE,CAAb,EAAgBC,QAAhB,CAAT;AACH;AACD,OAAO,SAASE,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;EAClD;;EACA,IAAI,CAACZ,QAAD,IAAa,CAACN,gBAAgB,EAAlC,EAAsC;IAClCmB,OAAO,CAACC,IAAR,CAAa,uEAAb;EACH;;EACDC,gBAAgB,CAACJ,UAAD,EAAaC,QAAb,CAAhB;AACH"},"metadata":{},"sourceType":"module"}